{"version":3,"file":"button.stories-4028c5b0.js","sources":["../../src/components/button/view/Button.tsx"],"sourcesContent":["import { ButtonHTMLAttributes, forwardRef } from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { Tooltip } from \"../../overlays/tooltip/view/Tooltip\";\n\nexport type ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  asChild?: boolean;\n  tooltip?: string;\n};\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ children, asChild = false, tooltip, ...props }, ref) => {\n    const ButtonSlot = asChild ? Slot : \"button\";\n\n    return (\n      <>\n        {tooltip !== undefined ? (\n          <Tooltip content={tooltip} sideOffset={2} arrow={{ width: 10, height: 5 }} asChild>\n            <ButtonSlot\n              ref={ref}\n              {...props}\n              className=\"py-2 px-3 inline-flex justify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-blue-500 text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all text-sm dark:focus:ring-offset-gray-800\"\n            >\n              {children}\n            </ButtonSlot>\n          </Tooltip>\n        ) : (\n          <ButtonSlot>{children}</ButtonSlot>\n        )}\n      </>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n"],"names":["Button","forwardRef","children","asChild","tooltip","props","ref","ButtonSlot","Slot","jsx","Fragment","Tooltip"],"mappings":"mNASO,MAAAA,EAAAC,EAAA,WAAe,CAAA,CAAA,SAAAC,EAAA,QAAAC,EAAA,GAAA,QAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAElB,MAAAC,EAAAJ,EAAAK,EAAA,SAEA,OAAAC,EAAAC,EAAA,CAAA,SAAAN,IAAA,OAAAK,EAAAE,EAAA,CAAA,QAAAP,EAAA,WAAA,EAAA,MAAA,CAAA,MAAA,GAAA,OAAA,CAAA,EAAA,QAAA,GAAA,SAAAK,EAIQF,EAAC,CAAA,IAAAD,EACC,GAAAD,EACI,UAAA,qRACM,SAAAH,CAET,CAAA,CAAA,CAAA,EAAAO,EAAAF,EAAA,CAAA,SAAAL,CAAA,CAAA,CAAA,CAAA,CAMT,CAGN,EAEAF,EAAA,YAAA;;;;;;"}